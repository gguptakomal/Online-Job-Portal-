public class JobPortalApp {
    public static void main(String[] args) {
        JobPortalService jobPortalService = new JobPortalService();
        
        // Sample Data
        User recruiter = new User("recruiter1", "password", "recruiter");
        User applicant = new User("applicant1", "password", "applicant");
        jobPortalService.registerUser(recruiter);
        jobPortalService.registerUser(applicant);
        
        jobPortalService.addJob("Java Developer", "Develop Java applications.", recruiter);
        
        jobPortalService.viewJobs(applicant);
        jobPortalService.applyForJob(1, applicant);
    }
}

public class User {
    private String username;
    private String password;
    private String role; // "applicant" or "recruiter"
    
    public User(String username, String password, String role) {
        this.username = username;
        this.password = password;
        this.role = role;
    }

    public String getUsername() {
        return username;
    }

    public String getRole() {
        return role;
    }

    public boolean checkPassword(String password) {
        return this.password.equals(password);
    }
}

public class Job {
    private static int counter = 1;
    private int jobId;
    private String title;
    private String description;
    private User postedBy;

    public Job(String title, String description, User postedBy) {
        this.jobId = counter++;
        this.title = title;
        this.description = description;
        this.postedBy = postedBy;
    }

    public int getJobId() {
        return jobId;
    }

    public String getTitle() {
        return title;
    }

    public String getDescription() {
        return description;
    }

    public User getPostedBy() {
        return postedBy;
    }

    @Override
    public String toString() {
        return "Job ID: " + jobId + ", Title: " + title + ", Description: " + description;
    }
}

import java.util.ArrayList;
import java.util.List;

public class JobPortalService {
    private List<User> users = new ArrayList<>();
    private List<Job> jobs = new ArrayList<>();

    public void registerUser(User user) {
        users.add(user);
        System.out.println("User " + user.getUsername() + " registered successfully.");
    }

    public void addJob(String title, String description, User recruiter) {
        if ("recruiter".equals(recruiter.getRole())) {
            Job job = new Job(title, description, recruiter);
            jobs.add(job);
            System.out.println("Job " + title + " added by " + recruiter.getUsername());
        } else {
            System.out.println("Only recruiters can post jobs.");
        }
    }

    public void viewJobs(User user) {
        System.out.println("Jobs available:");
        for (Job job : jobs) {
            System.out.println(job);
        }
    }

    public void applyForJob(int jobId, User applicant) {
        if ("applicant".equals(applicant.getRole())) {
            Job job = findJobById(jobId);
            if (job != null) {
                System.out.println(applicant.getUsername() + " applied for " + job.getTitle());
            } else {
                System.out.println("Job not found.");
            }
        } else {
            System.out.println("Only applicants can apply for jobs.");
        }
    }

    private Job findJobById(int jobId) {
        for (Job job : jobs) {
            if (job.getJobId() == jobId) {
                return job;
            }
        }
        return null;
    }
}
